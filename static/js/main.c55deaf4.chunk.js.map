{"version":3,"sources":["data.js","assets/UIUX_design.svg","components/Accordion.js","App.js","index.js"],"names":["questions","id","question","answer","downAnimation","keyframes","Card","styled","div","ImgContainer","AccordionContainer","AccordionItem","Question","Answer","Accordion","useState","clicked","setclicked","height","setHeight","content","useRef","useEffect","current","clientHeight","Provider","value","size","src","graphic","alt","map","item","onClick","style","borderBottom","borderLeft","color","undefined","maxHeight","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAgCeA,G,MAhCG,CAChB,CACEC,GAAI,EACJC,SAAU,qCACVC,OACE,6HAEJ,CACEF,GAAI,EACJC,SAAU,uCACVC,OACE,sKAEJ,CACEF,GAAI,EACJC,SAAU,sCACVC,OAAQ,2DAEV,CACEF,GAAI,EACJC,SAAU,mDACVC,OACE,iKAEJ,CACEF,GAAI,EACJC,SAAU,sCACVC,OACE,qK,mCC5BS,MAA0B,wC,OCMnCC,EAAgBC,YAAH,2JAUbC,EAAOC,IAAOC,IAAV,4cAUKJ,GAQTK,EAAeF,IAAOC,IAAV,8WAmBZE,EAAqBH,IAAOC,IAAV,2FAMlBG,EAAgBJ,IAAOC,IAAV,0LASbI,EAAWL,IAAOC,IAAV,2ZAsBRK,EAASN,IAAOC,IAAV,wMA0EGM,EA9DG,SAAC,GAAmB,IAAjBd,EAAgB,EAAhBA,UACnB,EAA8Be,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACMC,EAAUC,iBAAO,GAiBvB,OANAC,qBAAU,WACJN,GACFG,EAAUC,EAAQG,QAAQC,gBAE3B,CAACR,IAGF,cAAC,IAAYS,SAAb,CAAsBC,MAAO,CAAEC,KAAM,QAArC,SACE,eAACrB,EAAD,WACE,cAACG,EAAD,UACE,qBAAKmB,IAAKC,EAASC,IAAI,oBAEzB,eAACpB,EAAD,WACE,sCACCV,EAAU+B,KAAI,SAACC,GAAD,OACb,eAACrB,EAAD,WACE,eAACC,EAAD,CACEqB,QAAS,kBA1BFhC,EA0BoB+B,EAAK/B,QAzBxCe,IAAYf,GACdgB,EAAW,GACXE,EAAU,IAEVF,EAAWhB,IALK,IAACA,GA2BPiC,MAAO,CACLC,aACEnB,IAAYgB,EAAK/B,GACb,oBACA,iBACNmC,WACEpB,IAAYgB,EAAK/B,GACb,oBACA,iBACNoC,MAAOrB,IAAYgB,EAAK/B,GAAK,eAAYqC,GAX7C,UAcE,6BAAKN,EAAK9B,WACV,+BACGc,IAAYgB,EAAK/B,GAAK,cAAC,IAAD,IAAkB,cAAC,IAAD,SAG7C,cAACY,EAAD,CACEqB,MAAO,CAAEK,UAAWvB,IAAYgB,EAAK/B,GAAKiB,EAAS,KAAO,GAD5D,SAGE,mBAAGsB,IAAKpB,EAAR,SAAkBY,EAAK7B,aAvBP6B,EAAK/B,gBC5HtBwC,MAJf,WACE,OAAO,cAAC,EAAD,CAAWzC,UAAWA,KCC/B0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c55deaf4.chunk.js","sourcesContent":["const questions = [\r\n  {\r\n    id: 1,\r\n    question: 'What is User Interface (UI) Design',\r\n    answer:\r\n      'User Interface (UI) Design brings together concepts from interaction design, visual design, and information architecture.'\r\n  },\r\n  {\r\n    id: 2,\r\n    question: 'What is User Experience (UX) Design?',\r\n    answer:\r\n      'User Experience (UX) Design is the process of supporting user behavior through usability, usefulness, and desirability provided in the interaction with a product.'\r\n  },\r\n  {\r\n    id: 3,\r\n    question: 'Is it good money in UI / UX design?',\r\n    answer: 'UI / UX salaries are impressive even at an entry level.'\r\n  },\r\n  {\r\n    id: 4,\r\n    question: 'Do I need coding skills to get a job in UI / UX?',\r\n    answer:\r\n      'You can become a great product designer without learning to code, but I would be lying if I said that knowing at least some HTML and CSS is not an advantage.'\r\n  },\r\n  {\r\n    id: 5,\r\n    question: 'Is it too late to get into UI / UX?',\r\n    answer:\r\n      'I would say it has never been a better time to get into UI/UX. The demand across the planet is increasing daily, and I donâ€™t see it stopping anytime soon.'\r\n  }\r\n];\r\n\r\nexport default questions;\r\n","export default __webpack_public_path__ + \"static/media/UIUX_design.edbab20d.svg\";","import { useState, useRef, useEffect } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { IconContext } from 'react-icons';\r\nimport { FiChevronUp, FiChevronDown } from 'react-icons/fi';\r\nimport graphic from '../assets/UIUX_design.svg';\r\n\r\nconst downAnimation = keyframes`\r\n 0% {\r\n    transform: translateY(-50px);\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    transform: translateY(0);\r\n    opacity: 1;\r\n  }\r\n`;\r\nconst Card = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  background: white;\r\n  max-width: 1200px;\r\n  padding: 2rem;\r\n  border-radius: 2rem;\r\n  box-shadow: 0px 0px 40px -20px rgba(5, 71, 176, 0.5);\r\n  animation: ${downAnimation} 0.5s 0.1s ease-out both;\r\n  @media screen and (max-width: 750px) {\r\n    padding-top: 6rem;\r\n  }\r\n  @media screen and (min-width: 992px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\nconst ImgContainer = styled.div`\r\n  width: 400px;\r\n  margin-right: 1rem;\r\n  img {\r\n    height: 100%;\r\n    display: block;\r\n    width: inherit;\r\n  }\r\n  @media screen and (max-width: 750px) {\r\n    width: 250px;\r\n    position: absolute;\r\n    top: -120px;\r\n    margin-right: 0;\r\n  }\r\n  @media screen and (min-width: 1100px) {\r\n    width: 500px;\r\n    margin-right: 2rem;\r\n  }\r\n`;\r\nconst AccordionContainer = styled.div`\r\n  h2 {\r\n    font-size: 2.5rem;\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\nconst AccordionItem = styled.div`\r\n  border: 1px solid #d4dae9;\r\n  border-radius: 5px;\r\n  width: 470px;\r\n  margin-bottom: 7px;\r\n  @media screen and (max-width: 750px) {\r\n    width: 100%;\r\n  }\r\n`;\r\nconst Question = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n  padding: 1rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s linear;\r\n  h3 {\r\n    font-size: 1.1rem;\r\n    font-weight: 600;\r\n    margin-right: 2rem;\r\n  }\r\n  &:hover {\r\n    color: #3975fd;\r\n  }\r\n  @media screen and (min-width: 1100px) {\r\n    h3 {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`;\r\nconst Answer = styled.div`\r\n  background: #eef9ff;\r\n  border-radius: 5px;\r\n  transition: all 0.3s linear;\r\n  font-size: 0.9rem;\r\n  max-height: 0;\r\n  overflow: hidden;\r\n  p {\r\n    padding: 1rem;\r\n  }\r\n`;\r\n\r\nconst Accordion = ({ questions }) => {\r\n  const [clicked, setclicked] = useState(false);\r\n  const [height, setHeight] = useState(0);\r\n  const content = useRef(0);\r\n\r\n  const handleClick = (id) => {\r\n    if (clicked === id) {\r\n      setclicked(0);\r\n      setHeight(0);\r\n    } else {\r\n      setclicked(id);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (clicked) {\r\n      setHeight(content.current.clientHeight);\r\n    }\r\n  }, [clicked]);\r\n\r\n  return (\r\n    <IconContext.Provider value={{ size: '20px' }}>\r\n      <Card>\r\n        <ImgContainer>\r\n          <img src={graphic} alt=\"UI/UX Graphic\" />\r\n        </ImgContainer>\r\n        <AccordionContainer>\r\n          <h2>FAQs</h2>\r\n          {questions.map((item) => (\r\n            <AccordionItem key={item.id}>\r\n              <Question\r\n                onClick={() => handleClick(item.id)}\r\n                style={{\r\n                  borderBottom:\r\n                    clicked === item.id\r\n                      ? '1px solid #d4dae9'\r\n                      : '1px solid #fff',\r\n                  borderLeft:\r\n                    clicked === item.id\r\n                      ? '5px solid #3975fd'\r\n                      : '5px solid #fff',\r\n                  color: clicked === item.id ? '#3975fd' : undefined\r\n                }}\r\n              >\r\n                <h3>{item.question}</h3>\r\n                <span>\r\n                  {clicked === item.id ? <FiChevronUp /> : <FiChevronDown />}\r\n                </span>\r\n              </Question>\r\n              <Answer\r\n                style={{ maxHeight: clicked === item.id ? height + 'px' : 0 }}\r\n              >\r\n                <p ref={content}>{item.answer}</p>\r\n              </Answer>\r\n            </AccordionItem>\r\n          ))}\r\n        </AccordionContainer>\r\n      </Card>\r\n    </IconContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import questions from './data';\r\nimport Accordion from './components/Accordion';\r\n\r\nfunction App() {\r\n  return <Accordion questions={questions} />;\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}