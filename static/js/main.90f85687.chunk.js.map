{"version":3,"sources":["data.js","images/UIUX_design.svg","App.js","index.js"],"names":["questions","id","question","answer","downAnimation1","keyframes","downAnimation2","AccordionContainer","styled","div","Card","ItemsContainer","ImgContainer","Question","Answer","Accordion","useState","clicked","setclicked","Provider","value","size","src","graphic","alt","map","item","index","onClick","handleClick","style","borderBottom","undefined","borderLeft","color","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"8PAiCeA,EAjCG,CAChB,CACEC,GAAI,EACJC,SAAU,qCACVC,OACE,0SAEJ,CACEF,GAAI,EACJC,SAAU,uCACVC,OACE,qSAEJ,CACEF,GAAI,EACJC,SAAU,sCACVC,OACE,qLAEJ,CACEF,GAAI,EACJC,SAAU,8CACVC,OACE,gRAEJ,CACEF,GAAI,EACJC,SAAU,sCACVC,OACE,oKC7BS,MAA0B,wC,OCOnCC,EAAiBC,YAAH,0JAUdC,EAAiBD,YAAH,2JAUdE,EAAqBC,IAAOC,IAAV,0BAClBC,EAAOF,IAAOC,IAAV,iSASKH,GAETK,EAAiBH,IAAOC,IAAV,wGAKdG,EAAeJ,IAAOC,IAAV,4IASZI,EAAWL,IAAOC,IAAV,2TAiBRK,EAASN,IAAOC,IAAV,8MAMGL,GAmDAW,MA/Cf,WACE,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAUA,OACE,cAAC,IAAYC,SAAb,CAAsBC,MAAO,CAAEC,KAAM,QAArC,SACE,eAACX,EAAD,WACE,cAACE,EAAD,UACE,qBAAKU,IAAKC,EAASC,IAAI,oBAEzB,cAACjB,EAAD,UACGP,EAAUyB,KAAI,SAACC,EAAMC,GAAP,OACb,eAAChB,EAAD,WACE,eAACE,EAAD,CAEEe,QAAS,YAnBH,SAACD,GACnB,GAAIV,IAAYU,EACd,OAAOT,EAAW,MAGpBA,EAAWS,GAeGE,CAAYF,IAEdG,MAAO,CACLC,aACEd,IAAYU,EAAQ,yBAAsBK,EAC5CC,WACEhB,IAAYU,EAAQ,yBAAsBK,EAC5CE,MAAOjB,IAAYU,EAAQ,eAAYK,GAV3C,UAaE,6BAAKN,EAAKxB,WACV,+BACGe,IAAYU,EAAQ,cAAC,IAAD,IAAkB,cAAC,IAAD,QAdpCA,GAiBNV,IAAYU,EAAQ,cAACb,EAAD,UAASY,EAAKvB,SAAmB,mBCjHpEgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.90f85687.chunk.js","sourcesContent":["const questions = [\r\n  {\r\n    id: 1,\r\n    question: 'What is User Interface (UI) Design',\r\n    answer:\r\n      'User Interface (UI) Design focuses on anticipating what users might need to do and ensuring that the interface has elements that are easy to access, understand, and use to facilitate those actions. UI brings together concepts from interaction design, visual design, and information architectur.'\r\n  },\r\n  {\r\n    id: 2,\r\n    question: 'What is User Experience (UX) Design?',\r\n    answer:\r\n      'User experience (UX) design is the process design teams use to create products that provide meaningful and relevant experiences to users. This involves the design of the entire process of acquiring and integrating the product, including aspects of branding, design, usability and function.'\r\n  },\r\n  {\r\n    id: 3,\r\n    question: 'Is it good money in UI / UX design?',\r\n    answer:\r\n      'Short answer is no. You can become a great product designer without learning to code, but I would be lying if I said that knowing at least some HTML and CSS is not an advantage.'\r\n  },\r\n  {\r\n    id: 4,\r\n    question: 'Do I need a degree to get a job in UI / UX?',\r\n    answer:\r\n      'From my experience, companies and clients are more interested in portfolios than diplomas. So personally would’t focus too much on getting a degree. But you should keep in mind that starting on your own will be more difficult than if you had someone to teach you.'\r\n  },\r\n  {\r\n    id: 5,\r\n    question: 'Is it too late to get into UI / UX?',\r\n    answer:\r\n      'I would say it has never been a better time to get into UI/UX. The demand across the planet is increasing daily, and I don’t see it stopping anytime soon.'\r\n  }\r\n];\r\n\r\nexport default questions;\r\n","export default __webpack_public_path__ + \"static/media/UIUX_design.edbab20d.svg\";","import { useState } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { IconContext } from 'react-icons';\r\nimport { FiChevronUp, FiChevronDown } from 'react-icons/fi';\r\nimport questions from './data';\r\nimport graphic from './images/UIUX_design.svg';\r\n\r\nconst downAnimation1 = keyframes`\r\n 0% {\r\n    transform: translateY(-7px);\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    transform: translateY(0);\r\n    opacity: 1;\r\n  }\r\n`;\r\nconst downAnimation2 = keyframes`\r\n 0% {\r\n    transform: translateY(-50px);\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    transform: translateY(0);\r\n    opacity: 1;\r\n  }\r\n`;\r\nconst AccordionContainer = styled.div``;\r\nconst Card = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  background: white;\r\n  max-width: 1200px;\r\n  padding: 3rem;\r\n  border-radius: 2rem;\r\n  box-shadow: 0px 0px 40px -20px rgba(5, 71, 176, 0.5);\r\n  animation: ${downAnimation2} 0.5s 0.1s ease-out both;\r\n`;\r\nconst ItemsContainer = styled.div`\r\n  margin-bottom: 7px;\r\n  border: 1px solid #d4dae9;\r\n  border-radius: 5px;\r\n`;\r\nconst ImgContainer = styled.div`\r\n  width: 600px;\r\n  img {\r\n    width: 550px;\r\n    padding: 0 1rem;\r\n    height: 100%;\r\n    display: block;\r\n  }\r\n`;\r\nconst Question = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n  padding: 1rem;\r\n  cursor: pointer;\r\n  width: 500px;\r\n  transition: all 0.2s linear;\r\n  h3 {\r\n    font-size: 1.1rem;\r\n    font-weight: 600;\r\n  }\r\n  h3:hover {\r\n    color: #3975fd;\r\n  }\r\n`;\r\nconst Answer = styled.div`\r\n  width: 500px;\r\n  padding: 1rem;\r\n  background: #eef9ff;\r\n  border-radius: 5px;\r\n  transition: all 0.2s linear;\r\n  animation: ${downAnimation1} 0.3s 0.1s ease-out both;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nfunction Accordion() {\r\n  const [clicked, setclicked] = useState(false);\r\n\r\n  const handleClick = (index) => {\r\n    if (clicked === index) {\r\n      return setclicked(null);\r\n    }\r\n\r\n    setclicked(index);\r\n  };\r\n\r\n  return (\r\n    <IconContext.Provider value={{ size: '20px' }}>\r\n      <Card>\r\n        <ImgContainer>\r\n          <img src={graphic} alt=\"UI/UX Graphic\" />\r\n        </ImgContainer>\r\n        <AccordionContainer>\r\n          {questions.map((item, index) => (\r\n            <ItemsContainer>\r\n              <Question\r\n                key={index}\r\n                onClick={() => {\r\n                  handleClick(index);\r\n                }}\r\n                style={{\r\n                  borderBottom:\r\n                    clicked === index ? '1px solid #d4dae9' : undefined,\r\n                  borderLeft:\r\n                    clicked === index ? '5px solid #3975fd' : undefined,\r\n                  color: clicked === index ? '#3975fd' : undefined\r\n                }}\r\n              >\r\n                <h3>{item.question}</h3>\r\n                <span>\r\n                  {clicked === index ? <FiChevronUp /> : <FiChevronDown />}\r\n                </span>\r\n              </Question>\r\n              {clicked === index ? <Answer>{item.answer}</Answer> : null}\r\n            </ItemsContainer>\r\n          ))}\r\n        </AccordionContainer>\r\n      </Card>\r\n    </IconContext.Provider>\r\n  );\r\n}\r\n\r\nexport default Accordion;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}